- name: Create dirs
  ansible.builtin.file:
    state: directory
    path: '{{ item.path }}'
    mode: '{{ item.mode | default("700") }}'
    owner: root
    group: root
  loop:
    - path: '{{ instance_dir }}'

- name: Install docker templates
  ansible.builtin.template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    mode: '{{ item.mode | default("644") }}'
    owner: root
    group: root
  loop:
    - src: docker-compose.yml.j2
      dest: '{{ instance_dir }}/docker-compose.yml'

- name: Install config file
  ansible.builtin.copy:
    content: '{{ instance.config | ansible.builtin.to_nice_json }}'
    dest: '{{ instance_dir }}/config.json'
    mode: '600'
    owner: root
    group: root
  register: config

- name: Remove extraneous files from docker dir
  ansible.builtin.shell:
    chdir: '{{ dir }}'
    cmd: |
      for file in * .*; do
        [ ! -e "$file" ] && continue
        case $file in
          {{ ( [ '.', '..' ] + keep ) | map('ansible.builtin.quote') | join('|') }}) ;;
          *) rm -r -- "$file"; echo removed ;;
        esac
      done
  register: rmextra
  changed_when: "'removed' in rmextra.stdout"
  vars:
    # IMPORTANT: update the 'keep' list to reflect the files that we want to keep
    dir: '{{ instance_dir }}'
    keep:
      - docker-compose.yml
      - config.json

- name: Stop Hysteria
  ansible.builtin.command:
    argv: [ docker, compose, stop ]
    chdir: '{{ instance_dir }}'
  register: compose
  changed_when: '"Stopped" in compose.stderr'
  when: config.changed

- name: Start Hysteria
  ansible.builtin.command:
    argv: [ docker, compose, up, --detach, --remove-orphans ]
    chdir: '{{ instance_dir }}'
  register: compose
  changed_when: '"Started" in compose.stderr'
